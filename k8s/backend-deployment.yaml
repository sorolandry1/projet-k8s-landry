apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: recipe-app
spec:
  selector:
    app: backend
  ports:
    - port: 8000
      targetPort: 8000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: recipe-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.35
          command: ['sh', '-c', 'until nc -z postgres 5432; do echo waiting for postgres; sleep 2; done;']
      containers:
        - name: backend
          image: recipe-backend:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8000
          env:
            - name: DATABASE_URL
              value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres:5432/$(POSTGRES_DB)"
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: recipe-config
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: recipe-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: recipe-config
                  key: POSTGRES_DB
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: recipe-secret
                  key: SECRET_KEY
            - name: JWT_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: recipe-secret
                  key: JWT_ALGORITHM
            - name: CORS_ORIGINS
              valueFrom:
                configMapKeyRef:
                  name: recipe-config
                  key: CORS_ORIGINS
          volumeMounts:
            - name: uploads
              mountPath: /app/uploads
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 5
      volumes:
        - name: uploads
          persistentVolumeClaim:
            claimName: uploads-pvc

